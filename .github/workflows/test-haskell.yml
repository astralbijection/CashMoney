name: Haskell CI

on:
  push:
  pull_request:

jobs:
  build-artifact:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-haskell@v1
        with:
          enable-stack: true
          ghc-version: latest

      - name: Cache Cabal
        uses: actions/cache@v1
        env:
          cache-name: cache-cabal
        with:
          path: ~/.cabal
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/*.cabal') }}-${{ hashFiles('**/cabal.project') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-

      - name: Cache Stack
        uses: actions/cache@v1
        env:
          cache-name: cache-cabal
        with:
          path: ~/.stack
          key: ${{ runner.os }}-stack-${{ env.cache-name }}-${{ hashFiles('stack.yaml', 'stack.yaml.lock', 'package.yaml') }}
          restore-keys: |
            ${{ runner.os }}-stack-${{ env.cache-name }}-
            ${{ runner.os }}-stack-
            ${{ runner.os }}-

      # We could just run stack install --test, which will do everything for us. However, we do it this way
      # so we can debug which ones take the longest time.

      - name: Download dependencies
        run: stack build --only-dependencies

      - name: Compile app
        run: stack build

      - name: Run tests
        run: stack test

      - name: Generate binary
        run: stack install --local-bin-path ./bin

      - name: Upload binary as artifact
        uses: actions/upload-artifact@v2
        with:
          name: cashmoney
          path: bin/cashmoney

  # TODO integration testing >:)
